package templates

import (
	"strconv"

	"github.com/softsrv/brewferring/internal/models"
)

type DeviceDetailsProps struct {
	Device     models.Device
	Schedulers []models.Scheduler
	DeviceData []models.DeviceData
}

templ DeviceDetails(props DeviceDetailsProps) {
	<!DOCTYPE html>
	<html lang="en" data-theme="synthwave">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Device Details - Brewferring</title>
			<link rel="stylesheet" href="/static/css/output.css"/>
			<script src="/static/script/htmx.min.js"></script>
		</head>
		<body class="min-h-screen bg-base-200">
			@Navbar()
			<main class="container mx-auto px-4 py-8">
				<h1 class="text-4xl font-bold mb-8">{ props.Device.Name }</h1>

				<div class="tabs tabs-boxed mb-6">
					<a class="tab" onclick="showTab('schedulers')">Schedulers</a>
					<a class="tab tab-active" onclick="showTab('data')">Device Data</a>
				</div>

				<div id="schedulers-tab" class="tab-content hidden">
					<div class="overflow-x-auto">
						<table class="table w-full">
							<thead>
								<tr>
									<th>Name</th>
									<th>Date</th>
									<th>Threshold</th>
                  <th>Action</th>
								</tr>
							</thead>
							<tbody>
								for _, scheduler := range props.Device.Schedulers {
									<tr>
										<td>{ scheduler.Name }</td>
										<td>{ scheduler.Date.String() }</td>
										<td>{ strconv.FormatFloat(scheduler.Threshold, 'f', -1, 64) }</td>
										<td>
											<button class="btn btn-sm btn-error" onclick="deleteScheduler({ scheduler.ID })">Delete</button>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>

				<div id="data-tab" class="tab-content hidden">
					<div class="overflow-x-auto">
						<table class="table w-full">
							<thead>
								<tr>
									<th>Timestamp</th>
									<th>Value</th>
								</tr>
							</thead>
							<tbody>
								for _, data := range props.DeviceData {
									<tr>
										<td>{ data.CreatedAt.Format("2006-01-02 15:04:05") }</td>
										<td>{ strconv.FormatFloat(data.Value, 'f', -1, 64) }</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</main>

			<script>
				function showTab(tabName) {
					// Hide all tab contents
					document.querySelectorAll('.tab-content').forEach(content => {
						content.classList.add('hidden');
					});
					// Remove active class from all tabs
					document.querySelectorAll('.tab').forEach(tab => {
						tab.classList.remove('tab-active');
					});
					// Show selected tab content and activate tab
					document.getElementById(tabName + '-tab').classList.remove('hidden');
					event.target.classList.add('tab-active');
				}

				function copyToClipboard(text) {
					navigator.clipboard.writeText(text);
				}
			</script>
		</body>
	</html>
}
